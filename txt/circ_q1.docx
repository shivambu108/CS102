//SHIVAMBU DEV PANDEY
//23BCS123 
//CSE B
//LAB 
//PROGRAM 
//
//

/*
Description:
The enqueue(int val) function inserts an element into the queue, and if the queue is full, it prints “Queue overflow”. The dequeue() function
removes an element from the queue, and if the queue is empty, it prints “Queue underflow”. The display() function prints the elements in the queue, 
and if the queue is empty, it prints “Queue is empty”. The main() function presents a menu to the user to perform operations like enqueue, dequeue, 
display the queue, or exit the program. 
*/

#include<stdio.h>
#define MAX 5

int queue[MAX];
int front = -1, rear =-1;

void enqueue(int val) {
    if((front == 0 && rear == MAX - 1) || (front == rear + 1)) {
        printf("Queue overflow\n");
        return;
    }
    if(front == -1 && rear == -1)
        front = rear = 0;
    else if(rear == MAX - 1 && front != 0)
        rear = 0;
    else
        rear = rear + 1;

    queue[rear] = val;
}

void dequeue() {
    if(front == -1) {
        printf("Queue underflow\n");
        return;
    }

    int val = queue[front];
    if(front == rear)
        front = rear = -1;
    else if(front == MAX - 1)
        front = 0;
    else
        front = front + 1;

    printf("Deleted element -> %d \n", val);
}

void display() {
    int i;
    if(front == -1) {
        printf("Queue is empty\n");
        return;
    }

    printf("Queue is :\n");
    for(i = front; i != rear; i = (i + 1) % MAX)
        printf("%d ", queue[i]);
    printf("%d ", queue[i]);
    printf("\n");
}

int main() {
    int choice, x;
    
    do {
        printf("\n1. Enqueue\n2. Dequeue\n3. Display\n4. Exit\n");
        printf("Enter your choice : ");
        scanf("%d", &choice);

        switch(choice) {
            case 1: printf("Enter the element to be inserted : ");
                    scanf("%d", &x);
                    enqueue(x);
                    break;
            case 2: dequeue();
                    break;
            case 3: display();
                    break;
            case 4: printf("Exiting\n");
                    break;
            default: printf("Invalid choice\n");
        }
    } while(choice != 4);

    return 0;
}
